name: CI/CD for Flask Application

on:
  push:
    branches:
      - dev  # Adjust this branch name if you are using a different main branch
env:
  REGISTRY: ghcr.io
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build and deploy
        env:
          FLASK_APP: app.py
          FLASK_ENV: production
        run: |
          flask run &
          # Add your deployment commands here
          # For example, you could use scp or rsync to copy the files to your server
      - name: login gihub package
        run: docker login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_TOKEN }}
      - name: create build image
        run: docker build  -t ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/flaskapp:${{ github.sha }} .
      - name: pushing image to github package
        run: docker push ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/flaskapp:${{ github.sha }}

      - name: ssh connect to ec2 server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > ~/ssh_private_key
          chmod 400 ~/ssh_private_key
          ssh -i ~/ssh_private_key -o StrictHostKeyChecking=no ubuntu@$REMOTE_HOST '
            
            docker login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_TOKEN }}
            docker pull ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/flaskapp:${{ github.sha }}
            docker run -itd -p 80:5000 ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/flaskapp:${{ github.sha }}
            '
